import { RequiredLocaleConfig } from 'vuepress-shared';
import { Option } from 'artplayer/types/option.js';
import { LocaleConfig, PluginFunction } from '@vuepress/core';

type ArtPlayerOptions = Partial<Omit<Option, "container" | "url" | "type" | "customType" | "plugins" | "contextmenu" | "controls" | "layers" | "settings">>;

/**
 * @deprecated Use `vuepress-plugin-auto-catalog` instead
 */
interface CatalogLocaleData {
    /**
     * Catalog title text
     *
     * 目录标题文字
     */
    title: string;
}
/**
 * @deprecated Use `vuepress-plugin-auto-catalog` instead
 */
type CatalogLocaleConfig = RequiredLocaleConfig<CatalogLocaleData>;

interface BackToTopLocaleData {
    /**
     * Back to top button label text
     *
     * 返回顶部文字
     */
    backToTop: string;
}
type BackToTopLocaleConfig = RequiredLocaleConfig<BackToTopLocaleData>;
interface PDFLocaleData {
    /**
     * PDF hint text
     *
     * @description Only used if the browser does not support embedding PDF and no PDFJS URL is provided.
     * [url] will be replaced by actual PDF link.
     *
     * PDF 提示文字
     *
     * @description 只有在浏览器不支持嵌入 PDF 且没有提供 PDFJS URL 时才会使用
     * [url] 会被实际 PDF 链接替换
     */
    hint: string;
}
type PDFLocaleConfig = RequiredLocaleConfig<PDFLocaleData>;
interface SiteInfoLocaleData {
    /**
     * Source text
     *
     * 源代码文字
     */
    source: string;
}
type SiteInfoLocaleConfig = RequiredLocaleConfig<SiteInfoLocaleData>;

interface NoticeActionOption {
    /**
     * Action text
     *
     * 操作文字
     */
    text: string;
    /**
     * Action link
     *
     * 操作链接
     */
    link?: string;
    /**
     * Action type
     *
     * 操作类型
     *
     * @default "default"
     */
    type?: "primary" | "default";
}
interface NoticeItemOptions {
    /**
     * Notice title
     *
     * 通知标题
     */
    title: string;
    /**
     * Notice content
     *
     * 通知内容
     */
    content: string;
    /**
     * Notice key
     *
     * @description Used to identify and store the notice status
     *
     * Notice 的 key
     *
     * @description 用于标识和存储 notice 的状态
     */
    key?: string;
    /**
     * Whether show notice only once or show it in every visit
     *
     * 是否只显示一次通知
     *
     * @default false
     */
    showOnce?: boolean;
    /**
     * Whether the notice shall be confirmed
     *
     * 通知是否需要确认
     *
     * @default false
     */
    confirm?: boolean;
    /**
     * Whether the notice should appear fullscreen
     *
     * 通知是否应该全屏显示
     *
     * @default false
     */
    fullscreen?: boolean;
    /**
     * Notice actions
     *
     * 通知操作
     */
    actions?: NoticeActionOption[];
}
type NoticeOptions = NoticeItemOptions & ({
    path: string;
} | {
    match: RegExp;
});
type NoticeClientOptions = Omit<NoticeItemOptions, "key"> & {
    noticeKey?: string;
} & ({
    path: string;
} | {
    match: string;
});

declare const backToTopLocales: BackToTopLocaleConfig;

declare const pdfLocaleConfig: PDFLocaleConfig;

declare const siteInfoLocaleConfig: SiteInfoLocaleConfig;

type Link = `//${string}` | `http://${string}` | `https://${string}`;
type FontIconAssets = "iconfont" | "fontawesome" | "fontawesome-with-brands" | Link | Link[];
interface FontIconOptions {
    /**
     * Link of font icon asset
     *
     * 字体图标资源链接
     *
     * @description `"iconfont"` and `"fontawesome"` keywords are supported
     */
    assets?: FontIconAssets;
    /**
     * Class prefix of font icon
     *
     * 字体图标的 Class 前缀
     *
     * @default ""
     */
    prefix?: string;
}

type AvailableComponent = "ArtPlayer" | "AudioPlayer" | "Badge" | "BiliBili" | "CodePen" | "FontIcon" | "PDF" | "StackBlitz" | "SiteInfo" | "VideoPlayer" | "XiGua" | "YouTube";

interface ComponentGlobalOptions {
    /**
     * ArtPlayer config
     *
     * ArtPlayer 配置
     */
    artPlayer?: ArtPlayerOptions;
    /**
     * FontIcon config
     *
     * 图标配置
     */
    fontIcon?: FontIconOptions;
    /**
     * PDF viewer config
     *
     * PDF 阅读器配置
     */
    pdf?: {
        /**
         * Location of pdfjs
         *
         * pdfjs 的位置
         */
        pdfjs?: string;
    };
}

interface ComponentLocaleOptions {
    /**
     * backToTop button Locales config
     *
     * 返回顶部按钮国际化配置
     */
    backToTop?: LocaleConfig<BackToTopLocaleData>;
    /**
     * Catalog Locales config
     *
     * 目录组件国际化配置
     */
    catalog?: LocaleConfig<CatalogLocaleData>;
    /**
     * PDF Locales config
     *
     * PDF 组件国际化配置
     */
    pdf?: LocaleConfig<PDFLocaleData>;
    /**
     * SiteInfo Locales config
     *
     * 站点信息 组件国际化配置
     */
    siteInfo?: LocaleConfig<SiteInfoLocaleData>;
}

interface RootComponentOptions {
    /**
     * Add This 的公开 ID
     *
     * Public ID for add this
     */
    addThis?: string;
    /**
     * Whether enabling backToTop button
     *
     *
     * @description When setting a number, it will be used as backToTop button threshold distance (in pixels)
     *
     * 是否启用返回顶部按钮
     *
     * @description 当设置为数字时，将会作为返回顶部按钮距离阈值 (单位: 像素)
     */
    backToTop?: number | boolean;
    /**
     * Global notice config
     *
     * 全局通知配置
     */
    notice?: NoticeOptions[];
}

interface ComponentOptions {
    /**
     * Components to be registered
     *
     * 需要被注册的组件
     *
     * @default []
     */
    components?: AvailableComponent[];
    /**
     * Global config for components
     *
     * 组件全局配置
     */
    componentOptions?: ComponentGlobalOptions;
    /**
     * Root config for components
     *
     * 根组件配置
     */
    rootComponents?: RootComponentOptions;
    /**
     * Component Locales
     *
     * 组件多语言
     */
    locales?: ComponentLocaleOptions;
}

declare const componentsPlugin: (options: ComponentOptions, legacy?: boolean) => PluginFunction;

export { ArtPlayerOptions, AvailableComponent, BackToTopLocaleConfig, BackToTopLocaleData, CatalogLocaleConfig, CatalogLocaleData, ComponentOptions, FontIconAssets, FontIconOptions, NoticeActionOption, NoticeClientOptions, NoticeItemOptions, NoticeOptions, PDFLocaleConfig, PDFLocaleData, SiteInfoLocaleConfig, SiteInfoLocaleData, backToTopLocales, componentsPlugin, pdfLocaleConfig, siteInfoLocaleConfig };
