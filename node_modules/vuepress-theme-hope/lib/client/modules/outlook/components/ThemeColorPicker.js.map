{"version":3,"file":"ThemeColorPicker.js","sourceRoot":"","sources":["../../../../../src/client/modules/outlook/components/ThemeColorPicker.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,CAAC,EAAE,SAAS,EAAE,MAAM,KAAK,CAAC;AACpD,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,wBAAwB,CAAC;AAIvD,OAAO,mCAAmC,CAAC;AAE3C,eAAe,eAAe,CAAC;IAC7B,IAAI,EAAE,kBAAkB;IAExB,KAAK,EAAE;QACL;;;;WAIG;QACH,UAAU,EAAE;YACV,IAAI,EAAE,MAA0C;YAChD,QAAQ,EAAE,IAAI;SACf;KACF;IAED,KAAK,CAAC,KAAK;QACT,MAAM,aAAa,GAAG,CAAC,KAAK,GAAG,EAAE,EAAQ,EAAE;YACzC,MAAM,OAAO,GAAG,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC;YACnD,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,SAAS,KAAK,EAAE,CAAC,CAAC;YAEvE,IAAI,CAAC,KAAK,EAAE;gBACV,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gBACjC,OAAO,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;gBAE1B,OAAO;aACR;YAED,OAAO,CAAC,MAAM,CACZ,GAAG,MAAM,CAAC,MAAM,CACd,CAAC,eAAe,EAAE,EAAE,CAAC,eAAe,KAAK,SAAS,KAAK,EAAE,CAC1D,CACF,CAAC;YAEF,OAAO,CAAC,GAAG,CAAC,SAAS,KAAK,EAAE,CAAC,CAAC;YAC9B,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACvC,CAAC,CAAC;QAEF,SAAS,CAAC,GAAG,EAAE;YACb,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAE5C,IAAI,KAAK;gBAAE,aAAa,CAAC,KAAK,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,OAAO,GAAU,EAAE,CACjB,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,oBAAoB,EAAE,EAAE;YACpC,CAAC,CACC,IAAI,EACJ,CAAC,CAAC,MAAM,EAAE;gBACR,KAAK,EAAE,aAAa;gBACpB,OAAO,EAAE,GAAG,EAAE,CAAC,aAAa,EAAE;aAC/B,CAAC,CACH;YACD,GAAG,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE,CAClD,CAAC,CACC,IAAI,EACJ,CAAC,CAAC,MAAM,EAAE;gBACR,KAAK,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE;gBAC5B,OAAO,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC;aACpC,CAAC,CACH,CACF;SACF,CAAC,CAAC;IACP,CAAC;CACF,CAAC,CAAC","sourcesContent":["import { defineComponent, h, onMounted } from \"vue\";\nimport { entries, keys } from \"vuepress-shared/client\";\n\nimport type { PropType, VNode } from \"vue\";\n\nimport \"../styles/theme-color-picker.scss\";\n\nexport default defineComponent({\n  name: \"ThemeColorPicker\",\n\n  props: {\n    /**\n     * Theme color picker config\n     *\n     * 主题色选择器配置\n     */\n    themeColor: {\n      type: Object as PropType<Record<string, string>>,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const setThemeColor = (theme = \"\"): void => {\n      const classes = document.documentElement.classList;\n      const themes = keys(props.themeColor).map((color) => `theme-${color}`);\n\n      if (!theme) {\n        localStorage.removeItem(\"theme\");\n        classes.remove(...themes);\n\n        return;\n      }\n\n      classes.remove(\n        ...themes.filter(\n          (themeColorClass) => themeColorClass !== `theme-${theme}`\n        )\n      );\n\n      classes.add(`theme-${theme}`);\n      localStorage.setItem(\"theme\", theme);\n    };\n\n    onMounted(() => {\n      const theme = localStorage.getItem(\"theme\");\n\n      if (theme) setThemeColor(theme);\n    });\n\n    return (): VNode =>\n      h(\"ul\", { id: \"theme-color-picker\" }, [\n        h(\n          \"li\",\n          h(\"span\", {\n            class: \"theme-color\",\n            onClick: () => setThemeColor(),\n          })\n        ),\n        ...entries(props.themeColor).map(([color, value]) =>\n          h(\n            \"li\",\n            h(\"span\", {\n              style: { background: value },\n              onClick: () => setThemeColor(color),\n            })\n          )\n        ),\n      ]);\n  },\n});\n"]}