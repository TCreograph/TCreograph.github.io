{"version":3,"file":"components.js","sourceRoot":"","sources":["../../../src/node/plugins/components.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAC5C,OAAO,EAAE,gBAAgB,EAAE,MAAM,4BAA4B,CAAC;AAM9D,MAAM,CAAC,MAAM,mBAAmB,GAAG,CACjC,OAGC,EACD,EACE,UAAU,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,EAClC,gBAAgB,GAAG,EAAE,EACrB,cAAc,GAAG,EAAE,MACC,EAAE,EACxB,MAAM,GAAG,KAAK,EACN,EAAE,CACV,gBAAgB,CACd;IACE,2DAA2D;IAC3D,UAAU,EAAE,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC;QACzC,CAAC,CAAC,UAAU;QACZ,CAAC,CAAC,CAAC,UAAU,EAAE,GAAG,UAAU,CAAC;IAC/B,gBAAgB,EAAE;QAChB,QAAQ,EAAE;YACR,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;SAC9D;QACD,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QACvE,GAAG,gBAAgB;KACpB;IACD,cAAc,EAAE;QACd,SAAS,EACP,OAAO,OAAO,CAAC,SAAS,KAAK,QAAQ;YACnC,CAAC,CAAC,OAAO,CAAC,SAAS;YACnB,CAAC,CAAC,OAAO,CAAC,SAAS,KAAK,KAAK;QACjC,GAAG,cAAc;KAClB;CACF,EACD,MAAM,CACP,CAAC","sourcesContent":["import { isString } from \"@vuepress/shared\";\nimport { componentsPlugin } from \"vuepress-plugin-components\";\n\nimport type { ComponentOptions } from \"vuepress-plugin-components\";\nimport type { Plugin } from \"@vuepress/core\";\nimport type { ThemeOptions } from \"../../shared/index.js\";\n\nexport const getComponentsPlugin = (\n  options: Pick<\n    ThemeOptions,\n    \"backToTop\" | \"hostname\" | \"hotReload\" | \"iconAssets\" | \"iconPrefix\"\n  >,\n  {\n    components = [\"Badge\", \"FontIcon\"],\n    componentOptions = {},\n    rootComponents = {},\n  }: ComponentOptions = {},\n  legacy = false\n): Plugin =>\n  componentsPlugin(\n    {\n      // FontIcon component is used by theme so we MUST enable it\n      components: components.includes(\"FontIcon\")\n        ? components\n        : [\"FontIcon\", ...components],\n      componentOptions: {\n        fontIcon: {\n          ...(options.iconAssets ? { assets: options.iconAssets } : {}),\n        },\n        ...(isString(options.iconPrefix) ? { prefix: options.iconPrefix } : {}),\n        ...componentOptions,\n      },\n      rootComponents: {\n        backToTop:\n          typeof options.backToTop === \"number\"\n            ? options.backToTop\n            : options.backToTop !== false,\n        ...rootComponents,\n      },\n    },\n    legacy\n  );\n"]}