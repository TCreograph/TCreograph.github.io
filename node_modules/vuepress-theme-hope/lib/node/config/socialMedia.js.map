{"version":3,"file":"socialMedia.js","sourceRoot":"","sources":["../../../src/node/config/socialMedia.ts"],"names":[],"mappings":"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","sourcesContent":["import { isArray, isString } from \"@vuepress/shared\";\nimport { fs } from \"@vuepress/utils\";\nimport { entries, startsWith, values } from \"vuepress-shared/node\";\n\nimport { TEMPLATE_FOLDER, logger } from \"../utils.js\";\n\nimport type { ThemeData } from \"../../shared/index.js\";\n\nexport const checkSocialMediaIcons = (\n  themeData: ThemeData\n): Record<string, string> => {\n  const icons: Record<string, string> = {};\n\n  const checkIcon = (\n    key: string,\n    value: string | [string, string]\n  ): string | false => {\n    if (isString(value)) {\n      const templatePath = `${TEMPLATE_FOLDER}socialMediaIcons/${key.toLocaleLowerCase()}.svg`;\n\n      if (fs.existsSync(templatePath)) {\n        icons[key] = fs.readFileSync(templatePath, { encoding: \"utf-8\" });\n\n        return value;\n      }\n\n      logger.warn(`${key} icon in blog media config not found!`);\n\n      return false;\n    }\n\n    if (isArray(value)) {\n      // it’s a svg string\n      if (startsWith(value[1], \"<svg\")) {\n        icons[key] = value[1];\n\n        return value[0];\n      }\n\n      // it’s probably a path\n      if (fs.existsSync(value[1])) {\n        icons[key] = fs.readFileSync(value[1], { encoding: \"utf-8\" });\n\n        return value[0];\n      }\n\n      logger.warn(`${key}'s icon ${value[1]} in blog media config is invalid!`);\n\n      return false;\n    }\n\n    logger.warn(`${key} icon in blog media config has an invalid config!`);\n\n    return false;\n  };\n\n  entries(themeData.blog?.medias || {}).forEach(([key, value]) => {\n    const result = checkIcon(key, value);\n\n    if (result) themeData.blog!.medias![key] = result;\n    else delete themeData.blog!.medias![key];\n  });\n\n  if (themeData.locales)\n    values(themeData.locales).forEach((localeConfig) => {\n      entries(localeConfig.blog?.medias || {}).forEach(([key, value]) => {\n        const result = checkIcon(key, value);\n\n        if (result) localeConfig.blog!.medias![key] = result;\n        else delete localeConfig.blog!.medias![key];\n      });\n    });\n\n  return icons;\n};\n"]}