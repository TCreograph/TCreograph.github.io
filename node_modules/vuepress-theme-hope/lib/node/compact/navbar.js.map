{"version":3,"file":"navbar.js","sourceRoot":"","sources":["../../../src/node/compact/navbar.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AACpE,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAE,gBAAgB,EAAE,MAAM,YAAY,CAAC;AAC9C,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAC;AAerC,MAAM,mBAAmB,GAAG,CAAC,MAA2B,EAAiB,EAAE,CACzE,MAAM;KACH,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;IACZ,IAAI,QAAQ,CAAC,IAAI,CAAC;QAAE,OAAO,IAAI,CAAC;IAEhC,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE;QAC/B,gBAAgB,CAAC;YACf,aAAa;YACb,OAAO,EAAE,IAAI;YACb,gBAAgB,EAAE,OAAO;YACzB,SAAS,EAAE,UAAU;YACrB,KAAK,EAAE,QAAQ;SAChB,CAAC,CAAC;QAEH,IAAI,UAAU,IAAI,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC9C,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAErC,OAAO,IAAgC,CAAC;KACzC;IAED,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;KACD,MAAM,CAAC,CAAC,IAAI,EAA6C,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;AAEhF;;GAEG;AACH,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAClC,MAA+B,EACR,EAAE;IACzB,IAAI,MAAM,KAAK,KAAK;QAAE,OAAO,KAAK,CAAC;IACnC,IAAI,OAAO,CAAC,MAAM,CAAC;QAAE,OAAO,mBAAmB,CAAC,MAAuB,CAAC,CAAC;IAEzE,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,4BAA4B,CAAC,CAAC;IAEtE,OAAO,KAAK,CAAC;AACf,CAAC,CAAC","sourcesContent":["import { isArray, isPlainObject, isString } from \"@vuepress/shared\";\nimport { colors } from \"@vuepress/utils\";\nimport { deprecatedLogger } from \"./utils.js\";\nimport { logger } from \"../utils.js\";\n\nimport type {\n  AutoLinkOptions,\n  NavbarGroup,\n  NavbarItem,\n  NavbarOptions,\n} from \"../../shared/index.js\";\n\ntype LegacyNavbarOptions = (\n  | string\n  | AutoLinkOptions\n  | (NavbarGroup & { items?: (AutoLinkOptions | string)[] })\n)[];\n\nconst handleNavbarOptions = (config: LegacyNavbarOptions): NavbarOptions =>\n  config\n    .map((item) => {\n      if (isString(item)) return item;\n\n      if (isPlainObject(item) && item) {\n        deprecatedLogger({\n          // @ts-ignore\n          options: item,\n          deprecatedOption: \"items\",\n          newOption: \"children\",\n          scope: \"navbar\",\n        });\n\n        if (\"children\" in item && isArray(item.children))\n          handleNavbarOptions(item.children);\n\n        return item as NavbarItem | NavbarGroup;\n      }\n\n      return null;\n    })\n    .filter((item): item is NavbarItem | NavbarGroup | string => item !== null);\n\n/**\n * @deprecated You should use V2 standard navbar config and avoid using it\n */\nexport const convertNavbarOptions = (\n  config: NavbarOptions | unknown\n): NavbarOptions | false => {\n  if (config === false) return false;\n  if (isArray(config)) return handleNavbarOptions(config as NavbarOptions);\n\n  logger.error(`${colors.magenta(\"navbar\")} config should be an array`);\n\n  return false;\n};\n"]}