{"version":3,"file":"index.js","sources":["../../src/node/utils.ts","../../src/node/autoCatalog.ts","../../src/node/plugin.ts"],"sourcesContent":["import { ensureEndingSlash } from \"@vuepress/shared\";\nimport { getDirname, path } from \"@vuepress/utils\";\nimport { Logger } from \"vuepress-shared/node\";\n\nconst __dirname = getDirname(import.meta.url);\n\nexport const CLIENT_FOLDER = ensureEndingSlash(\n  path.resolve(__dirname, \"../client\")\n);\n\nexport const logger = new Logger(\"vuepress-plugin-auto-catalog\");\n","import { createPage } from \"@vuepress/core\";\nimport { getTitleFromFilename } from \"vuepress-shared/node\";\nimport { logger } from \"./utils.js\";\n\nimport type { App, PageFrontmatter } from \"@vuepress/core\";\nimport type { AutoCatalogOptions } from \"./options.js\";\n\nexport const generateCatalog = async (\n  app: App,\n  {\n    component = \"AutoCatalog\",\n    exclude = [],\n    frontmatter = (): PageFrontmatter => ({}),\n    level = 3,\n  }: AutoCatalogOptions\n): Promise<void> => {\n  const {\n    env: { isDebug },\n    pages,\n  } = app;\n\n  const pathToBeGenerated = new Set<string>();\n  const content = `\\\n<${component}${[1, 2].includes(level) ? ` :level=\"${level}\"` : \"\"} />\n`;\n\n  pages.forEach(({ path: pagePath, pathLocale }) => {\n    let catalogPath = pagePath;\n\n    while (catalogPath !== pathLocale) {\n      catalogPath = catalogPath.replace(/\\/(?:[^/]+\\/?)$/, \"/\");\n\n      if (\n        // not discovered yet\n        !pathToBeGenerated.has(catalogPath) &&\n        // not being excluded\n        exclude.every((pattern) => !catalogPath.match(pattern)) &&\n        // path not found\n        pages.every(({ path }) => path !== catalogPath)\n      ) {\n        if (isDebug) logger.info(`Generating catalog ${catalogPath}}`);\n\n        pathToBeGenerated.add(catalogPath);\n      }\n    }\n  });\n\n  await Promise.all(\n    Array.from(pathToBeGenerated)\n      .map((path) => decodeURI(path))\n      .map((path) => {\n        const [, basename] = /\\/([^/]+)\\/?$/.exec(path) || [];\n        const title = getTitleFromFilename(basename);\n\n        return createPage(app, {\n          frontmatter: {\n            title,\n            ...(frontmatter(path) || {}),\n          },\n          content,\n          path,\n        });\n      })\n  ).then((pages) => {\n    app.pages.push(...pages);\n  });\n};\n","import { catalogLocales } from \"vuepress-plugin-components\";\nimport { getLocales } from \"vuepress-shared/node\";\nimport { useSassPalettePlugin } from \"vuepress-plugin-sass-palette\";\nimport { generateCatalog } from \"./autoCatalog.js\";\nimport { CLIENT_FOLDER } from \"./utils.js\";\n\nimport type { PluginFunction } from \"@vuepress/core\";\nimport type { AutoCatalogOptions } from \"./options.js\";\n\nexport const autoCatalogPlugin =\n  (options: AutoCatalogOptions = {}): PluginFunction =>\n  (app) => {\n    useSassPalettePlugin(app, { id: \"hope\" });\n\n    return {\n      name: \"vuepress-plugin-auto-catalog\",\n\n      define: (): Record<string, unknown> => ({\n        CATALOG_LOCALES: getLocales({\n          app,\n          name: \"catalog\",\n          default: catalogLocales,\n          config: options.locales,\n        }),\n        SHOULD_REGISTER_AUTO_CATALOG_COMPONENT:\n          options.component === \"AutoCatalog\" || !options.component,\n      }),\n\n      onInitialized: async (app): Promise<void> =>\n        generateCatalog(app, options),\n\n      clientConfigFile: `${CLIENT_FOLDER}config.js`,\n    };\n  };\n"],"names":["__dirname","getDirname","CLIENT_FOLDER","ensureEndingSlash","path","logger","Logger","generateCatalog","app","component","exclude","frontmatter","level","isDebug","pages","pathToBeGenerated","content","pagePath","pathLocale","catalogPath","pattern","basename","title","getTitleFromFilename","createPage","autoCatalogPlugin","options","useSassPalettePlugin","getLocales","catalogLocales"],"mappings":"gXAIA,MAAMA,EAAYC,EAAW,YAAY,GAAG,EAE/BC,EAAgBC,EAC3BC,EAAK,QAAQJ,EAAW,WAAW,CACrC,EAEaK,EAAS,IAAIC,EAAO,8BAA8B,ECHlDC,EAAkB,MAC7BC,EACA,CACE,UAAAC,EAAY,cACZ,QAAAC,EAAU,CAAA,EACV,YAAAC,EAAc,KAAwB,CACtC,GAAA,MAAAC,EAAQ,CACV,IACkB,CAClB,KAAM,CACJ,IAAK,CAAE,QAAAC,CAAQ,EACf,MAAAC,CACF,EAAIN,EAEEO,EAAoB,IAAI,IACxBC,EAAU,IACfP,IAAY,CAAC,EAAG,CAAC,EAAE,SAASG,CAAK,EAAI,YAAYA,KAAW;AAAA,EAG7DE,EAAM,QAAQ,CAAC,CAAE,KAAMG,EAAU,WAAAC,CAAW,IAAM,CAChD,IAAIC,EAAcF,EAElB,KAAOE,IAAgBD,GACrBC,EAAcA,EAAY,QAAQ,kBAAmB,GAAG,EAItD,CAACJ,EAAkB,IAAII,CAAW,GAElCT,EAAQ,MAAOU,GAAY,CAACD,EAAY,MAAMC,CAAO,CAAC,GAEtDN,EAAM,MAAM,CAAC,CAAE,KAAAV,CAAK,IAAMA,IAASe,CAAW,IAE1CN,GAASR,EAAO,KAAK,sBAAsBc,IAAc,EAE7DJ,EAAkB,IAAII,CAAW,EAGvC,CAAC,EAED,MAAM,QAAQ,IACZ,MAAM,KAAKJ,CAAiB,EACzB,IAAKX,GAAS,UAAUA,CAAI,CAAC,EAC7B,IAAKA,GAAS,CACb,KAAM,CAAA,CAAGiB,CAAQ,EAAI,gBAAgB,KAAKjB,CAAI,GAAK,GAC7CkB,EAAQC,EAAqBF,CAAQ,EAE3C,OAAOG,EAAWhB,EAAK,CACrB,YAAa,CACX,MAAAc,EACA,GAAIX,EAAYP,CAAI,GAAK,CAAA,CAC3B,EACA,QAAAY,EACA,KAAAZ,CACF,CAAC,CACH,CAAC,CACL,EAAE,KAAMU,GAAU,CAChBN,EAAI,MAAM,KAAK,GAAGM,CAAK,CACzB,CAAC,CACH,ECzDaW,EACX,CAACC,EAA8B,CAAA,IAC9BlB,IACCmB,EAAqBnB,EAAK,CAAE,GAAI,MAAO,CAAC,EAEjC,CACL,KAAM,+BAEN,OAAQ,KAAgC,CACtC,gBAAiBoB,EAAW,CAC1B,IAAApB,EACA,KAAM,UACN,QAASqB,EACT,OAAQH,EAAQ,OAClB,CAAC,EACD,uCACEA,EAAQ,YAAc,eAAiB,CAACA,EAAQ,SACpD,GAEA,cAAe,MAAOlB,GACpBD,EAAgBC,EAAKkB,CAAO,EAE9B,iBAAkB,GAAGxB,YACvB"}