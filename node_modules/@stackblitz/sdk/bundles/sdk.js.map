{"version":3,"file":"sdk.js","sources":["../src/constants.ts","../src/params.ts","../src/helpers.ts","../src/rdc.ts","../src/vm.ts","../src/connection.ts","../src/generate.ts","../src/lib.ts","../src/index.ts"],"sourcesContent":["/**\n * Number of milliseconds between attempts to get a response from an embedded frame\n */\nexport const CONNECT_INTERVAL = 500;\n\n/**\n * How many times should we try to get an init response from an embedded frame\n */\nexport const CONNECT_MAX_ATTEMPTS = 20;\n\n/**\n * Default height attribute for iframes\n */\nexport const DEFAULT_FRAME_HEIGHT = 300;\n\n/**\n * Origin of the StackBlitz instance\n */\nexport const DEFAULT_ORIGIN = 'https://stackblitz.com';\n\n/**\n * List of supported template names.\n */\nexport const PROJECT_TEMPLATES = [\n  'angular-cli',\n  'create-react-app',\n  'html',\n  'javascript',\n  'node',\n  'polymer',\n  'typescript',\n  'vue',\n] as const;\n","import type { EmbedOptions, OpenOptions } from './interfaces';\n\ntype Options = Omit<OpenOptions & EmbedOptions, 'origin' | 'newWindow' | 'height' | 'width'>;\n\nconst generators: Record<keyof Options, (value: any) => string> = {\n  clickToLoad: (value: Options['clickToLoad']) => trueParam('ctl', value),\n  devToolsHeight: (value: Options['devToolsHeight']) => percentParam('devtoolsheight', value),\n  forceEmbedLayout: (value: Options['forceEmbedLayout']) => trueParam('embed', value),\n  hideDevTools: (value: Options['hideDevTools']) => trueParam('hidedevtools', value),\n  hideExplorer: (value: Options['hideExplorer']) => trueParam('hideExplorer', value),\n  hideNavigation: (value: Options['hideNavigation']) => trueParam('hideNavigation', value),\n  showSidebar: (value: Options['showSidebar']) => booleanParam('showSidebar', value),\n  openFile: (value: Options['openFile']) => stringParams('file', value).join('&'),\n  terminalHeight: (value: Options['terminalHeight']) => percentParam('terminalHeight', value),\n  theme: (value: Options['theme']) => enumParam('theme', ['light', 'dark'], value),\n  view: (value: Options['view']) => enumParam('view', ['preview', 'editor'], value),\n};\n\nexport function buildParams(options: Options = {}): string {\n  const params: string[] = Object.entries(options)\n    .map(([key, value]) => {\n      if (value != null && generators.hasOwnProperty(key)) {\n        return generators[key as keyof Options](value);\n      }\n      return '';\n    })\n    .filter(Boolean);\n\n  return params.length ? `?${params.join('&')}` : '';\n}\n\nfunction trueParam(name: string, value?: boolean): string {\n  if (value === true) {\n    return `${name}=1`;\n  }\n  return '';\n}\n\nfunction booleanParam(name: string, value?: boolean): string {\n  if (typeof value === 'boolean') {\n    return `${name}=${value ? '1' : '0'}`;\n  }\n  return '';\n}\n\nfunction percentParam(name: string, value?: number): string {\n  if (typeof value === 'number' && value >= 0 && value <= 100) {\n    return `${name}=${Math.round(value)}`;\n  }\n  return '';\n}\n\nfunction enumParam(name: string, oneOf: string[], value?: string) {\n  if (typeof value === 'string' && oneOf.includes(value)) {\n    return `${name}=${value}`;\n  }\n  return '';\n}\n\nfunction stringParams(name: string, value?: string | string[]): string[] {\n  const values = Array.isArray(value) ? value : [value];\n  return values\n    .filter((val) => typeof val === 'string' && val.trim() !== '')\n    .map((val: string) => `${name}=${encodeURIComponent(val.trim())}`);\n}\n","import type { EmbedOptions, OpenOptions } from './interfaces';\nimport { DEFAULT_FRAME_HEIGHT, DEFAULT_ORIGIN } from './constants';\nimport { buildParams } from './params';\n\n/**\n * Pseudo-random id string for internal accounting.\n * 8 characters long, and collisions around 1 per million.\n */\nexport function genID() {\n  return Math.random().toString(36).slice(2, 6) + Math.random().toString(36).slice(2, 6);\n}\n\nexport function openUrl(route: string, options?: OpenOptions) {\n  return `${getOrigin(options)}${route}${buildParams(options)}`;\n}\n\nexport function embedUrl(route: string, options?: EmbedOptions) {\n  const config: EmbedOptions = {\n    forceEmbedLayout: true,\n  };\n  if (options && typeof options === 'object') {\n    Object.assign(config, options);\n  }\n  return `${getOrigin(config)}${route}${buildParams(config)}`;\n}\n\nfunction getOrigin(options: OpenOptions & EmbedOptions = {}) {\n  if (typeof options.origin === 'string') {\n    return options.origin;\n  }\n  return DEFAULT_ORIGIN;\n}\n\nexport function replaceAndEmbed(\n  parent: HTMLElement,\n  frame: HTMLIFrameElement,\n  options?: EmbedOptions\n) {\n  if (!frame || !parent || !parent.parentNode) {\n    throw new Error('Invalid Element');\n  }\n  if (parent.id) frame.id = parent.id;\n  if (parent.className) frame.className = parent.className;\n  setFrameDimensions(frame, options);\n  parent.parentNode.replaceChild(frame, parent);\n}\n\nexport function findElement(elementOrId: string | HTMLElement) {\n  if (typeof elementOrId === 'string') {\n    const element = document.getElementById(elementOrId);\n    if (!element) {\n      throw new Error(`Could not find element with id '${elementOrId}'`);\n    }\n    return element;\n  } else if (elementOrId instanceof HTMLElement) {\n    return elementOrId;\n  }\n  throw new Error(`Invalid element: ${elementOrId}`);\n}\n\nexport function openTarget(options?: OpenOptions) {\n  return options && options.newWindow === false ? '_self' : '_blank';\n}\n\nfunction setFrameDimensions(frame: HTMLIFrameElement, options?: EmbedOptions) {\n  if (options && typeof options === 'object') {\n    if (Object.hasOwnProperty.call(options, 'height')) {\n      frame.height = `${options.height}`;\n    }\n    if (Object.hasOwnProperty.call(options, 'width')) {\n      frame.width = `${options.width}`;\n    }\n  }\n\n  if (!frame.height) {\n    frame.height = `${DEFAULT_FRAME_HEIGHT}`;\n  }\n  if (!frame.width) {\n    frame.setAttribute('style', 'width:100%;');\n  }\n}\n","import { genID } from './helpers';\n\ninterface MessageData {\n  type: string;\n  payload: MessagePayload;\n}\n\ninterface MessagePayload {\n  __reqid: string;\n  __success: boolean;\n  __error?: string;\n  [key: string]: any;\n}\n\ninterface RequestData {\n  type: string;\n  payload: { [key: string]: any };\n}\n\ninterface PendingResolvers {\n  [id: string]: {\n    resolve(value: { [key: string]: any } | null): void;\n    reject(error: string): void;\n  };\n}\n\nexport class RDC {\n  private port: MessagePort;\n  private pending: PendingResolvers = {};\n\n  constructor(port: MessagePort) {\n    this.port = port;\n    this.port.onmessage = this.messageListener.bind(this);\n  }\n\n  public request<T = null>({ type, payload }: RequestData): Promise<T | null> {\n    // Generate request ID\n    const id = genID();\n    return new Promise((resolve, reject) => {\n      this.pending[id] = { resolve, reject };\n      this.port.postMessage({\n        type,\n        payload: {\n          ...payload,\n          // Ensure the payload object includes the request ID\n          __reqid: id,\n        },\n      });\n    });\n  }\n\n  private messageListener(event: MessageEvent<MessageData>) {\n    if (typeof event.data.payload?.__reqid !== 'string') {\n      return;\n    }\n\n    const { type, payload } = event.data;\n    const { __reqid: id, __success: success, __error: error } = payload;\n\n    if (this.pending[id]) {\n      if (success) {\n        this.pending[id].resolve(cleanResult(payload));\n      } else {\n        this.pending[id].reject(error ? `${type}: ${error}` : type);\n      }\n      delete this.pending[id];\n    }\n  }\n}\n\nfunction cleanResult(payload: MessagePayload): { [key: string]: any } | null {\n  const result: Partial<typeof payload> = { ...payload };\n  delete result.__reqid;\n  delete result.__success;\n  delete result.__error;\n  // Null the result if payload was empty besides the private metadata fields\n  return Object.keys(result).length ? result : null;\n}\n","import type {\n  OpenFileOption,\n  ProjectDependencies,\n  ProjectFiles,\n  UiThemeOption,\n  UiViewOption,\n} from './interfaces';\nimport { RDC } from './rdc';\n\nexport interface FsDiff {\n  create: {\n    [path: string]: string;\n  };\n  destroy: string[];\n}\n\nexport class VM {\n  private _rdc: RDC;\n\n  constructor(port: MessagePort, config: { previewOrigin?: string }) {\n    this._rdc = new RDC(port);\n\n    Object.defineProperty(this.preview, 'origin', {\n      value: typeof config.previewOrigin === 'string' ? config.previewOrigin : null,\n      writable: false,\n    });\n  }\n\n  /**\n   * Apply batch updates to the project files in one call.\n   */\n  applyFsDiff(diff: FsDiff): Promise<null> {\n    const isObject = (val: any) => val !== null && typeof val === 'object';\n    if (!isObject(diff) || !isObject(diff.create)) {\n      throw new Error('Invalid diff object: expected diff.create to be an object.');\n    } else if (!Array.isArray(diff.destroy)) {\n      throw new Error('Invalid diff object: expected diff.create to be an array.');\n    }\n\n    return this._rdc.request({\n      type: 'SDK_APPLY_FS_DIFF',\n      payload: diff,\n    });\n  }\n\n  /**\n   * Get the project’s defined dependencies.\n   *\n   * In EngineBlock projects, version numbers represent the resolved dependency versions.\n   * In WebContainers-based projects, returns data from the project’s `package.json` without resolving installed version numbers.\n   */\n  getDependencies(): Promise<ProjectDependencies | null> {\n    return this._rdc.request({\n      type: 'SDK_GET_DEPS_SNAPSHOT',\n      payload: {},\n    });\n  }\n\n  /**\n   * Get a snapshot of the project files and their content.\n   */\n  getFsSnapshot(): Promise<ProjectFiles | null> {\n    return this._rdc.request<{ [path: string]: string }>({\n      type: 'SDK_GET_FS_SNAPSHOT',\n      payload: {},\n    });\n  }\n\n  public editor = {\n    /**\n     * Open one of several files in tabs and/or split panes.\n     *\n     * @since 1.7.0 Added support for opening multiple files\n     */\n    openFile: (path: OpenFileOption): Promise<null> => {\n      return this._rdc.request({\n        type: 'SDK_OPEN_FILE',\n        payload: { path },\n      });\n    },\n\n    /**\n     * Set a project file as the currently selected file.\n     * \n     * - This may update the highlighted file in the file explorer,\n     *   and the currently open and/or focused editor tab.\n     * - It will _not_ open a new editor tab if the provided path does not\n     *   match a currently open tab. See `vm.editor.openFile` to open files.\n     *\n     * @since 1.7.0\n     * @experimental\n     */\n    setCurrentFile: (path: string): Promise<null> => {\n      return this._rdc.request({\n        type: 'SDK_SET_CURRENT_FILE',\n        payload: { path },\n      });\n    },\n\n    /**\n     * Change the color theme\n     *\n     * @since 1.7.0\n     */\n    setTheme: (theme: UiThemeOption): Promise<null> => {\n      return this._rdc.request({\n        type: 'SDK_SET_UI_THEME',\n        payload: { theme },\n      });\n    },\n\n    /**\n     * Change the display mode of the project:\n     *\n     * - `default`: show the editor and preview pane\n     * - `editor`: show the editor pane only\n     * - `preview`: show the preview pane only\n     *\n     * @since 1.7.0\n     */\n    setView: (view: UiViewOption): Promise<null> => {\n      return this._rdc.request({\n        type: 'SDK_SET_UI_VIEW',\n        payload: { view },\n      });\n    },\n\n    /**\n     * Change the display mode of the sidebar:\n     *\n     * - `true`: show the sidebar\n     * - `false`: hide the sidebar\n     *\n     * @since 1.7.0\n     */\n    showSidebar: (visible: boolean = true): Promise<null> => {\n      return this._rdc.request({\n        type: 'SDK_TOGGLE_SIDEBAR',\n        payload: { visible },\n      });\n    },\n  };\n\n  public preview = {\n    /**\n     * The origin (protocol and domain) of the preview iframe.\n     *\n     * In WebContainers-based projects, the origin will always be `null`;\n     * try using `vm.preview.getUrl` instead.\n     *\n     * @see https://developer.stackblitz.com/docs/platform/available-environments\n     */\n    origin: '' as string | null,\n\n    /**\n     * Get the current preview URL.\n     *\n     * In both and EngineBlock and WebContainers-based projects, the preview URL\n     * may not reflect the exact path of the current page, after user navigation.\n     *\n     * In WebContainers-based projects, the preview URL will be `null` initially,\n     * and until the project starts a web server.\n     *\n     * @since 1.7.0\n     * @experimental\n     */\n    getUrl: (): Promise<string | null> => {\n      return this._rdc\n        .request<{ url: string } | null>({\n          type: 'SDK_GET_PREVIEW_URL',\n          payload: {},\n        })\n        .then((data) => data?.url ?? null);\n    },\n\n    /**\n     * Change the path of the preview URL.\n     *\n     * In WebContainers-based projects, this will be ignored if there is no\n     * currently running web server.\n     *\n     * @since 1.7.0\n     * @experimental\n     */\n    setUrl: (path: string = '/'): Promise<null> => {\n      if (typeof path !== 'string' || !path.startsWith('/')) {\n        throw new Error(`Invalid argument: expected a path starting with '/', got '${path}'`);\n      }\n      return this._rdc.request<null>({\n        type: 'SDK_SET_PREVIEW_URL',\n        payload: { path },\n      });\n    },\n  };\n}\n","import { CONNECT_INTERVAL, CONNECT_MAX_ATTEMPTS } from './constants';\nimport { genID } from './helpers';\nimport { VM } from './vm';\n\nconst connections: Connection[] = [];\n\nexport class Connection {\n  element: HTMLIFrameElement;\n  id: string;\n  pending: Promise<VM>;\n  vm: VM;\n\n  constructor(element: HTMLIFrameElement) {\n    this.id = genID();\n    this.element = element;\n    this.pending = new Promise<VM>((resolve, reject) => {\n      const listenForSuccess = ({ data, ports }: MessageEvent) => {\n        if (data?.action === 'SDK_INIT_SUCCESS' && data.id === this.id) {\n          this.vm = new VM(ports[0], data.payload);\n          resolve(this.vm);\n          cleanup();\n        }\n      };\n\n      const pingFrame = () => {\n        this.element.contentWindow?.postMessage(\n          {\n            action: 'SDK_INIT',\n            id: this.id,\n          },\n          '*'\n        );\n      };\n\n      // Remove the listener and interval.\n      function cleanup() {\n        window.clearInterval(interval);\n        window.removeEventListener('message', listenForSuccess);\n      }\n\n      // First we want to set up the listener for the frame\n      window.addEventListener('message', listenForSuccess);\n      // Then, lets immediately ping the frame.\n      pingFrame();\n      // Keep track of the current try number\n      let attempts = 0;\n      const interval = window.setInterval(() => {\n        // If the VM connection is open, cleanup and return\n        // This shouldn't ever happen, but just in case there's some race condition...\n        if (!!this.vm) {\n          cleanup();\n          return;\n        }\n\n        // If we've exceeded the max retries, fail this promise.\n        if (attempts >= CONNECT_MAX_ATTEMPTS) {\n          cleanup();\n          reject('Timeout: Unable to establish a connection with the StackBlitz VM');\n          // Remove the (now) failed connection from the connections array\n          connections.forEach((connection, index) => {\n            if (connection.id === this.id) {\n              connections.splice(index, 1);\n            }\n          });\n          return;\n        }\n\n        attempts++;\n        pingFrame();\n      }, CONNECT_INTERVAL);\n    });\n\n    connections.push(this);\n  }\n}\n\n// Accepts either the frame element OR the id.\nexport const getConnection = (identifier: string | HTMLIFrameElement) => {\n  const key = identifier instanceof Element ? 'element' : 'id';\n  return connections.find((c) => c[key] === identifier) ?? null;\n};\n","import type { Project, EmbedOptions, OpenOptions } from './interfaces';\nimport { PROJECT_TEMPLATES } from './constants';\nimport { embedUrl, openTarget, openUrl } from './helpers';\n\nfunction createHiddenInput(name: string, value: string) {\n  const input = document.createElement('input');\n  input.type = 'hidden';\n  input.name = name;\n  input.value = value;\n  return input;\n}\n\n/**\n * Encode file paths for use in input name attributes.\n * We need to replace square brackets (as used by Next.js, SvelteKit, etc.),\n * with custom escape sequences. Important: do not encodeURIComponent the\n * whole path, for compatibility with the StackBlitz backend.\n */\nfunction bracketedFilePath(path: string) {\n  return `[${path.replace(/\\[/g, '%5B').replace(/\\]/g, '%5D')}]`;\n}\n\nfunction createProjectForm(project: Project) {\n  if (!PROJECT_TEMPLATES.includes(project.template)) {\n    const names = PROJECT_TEMPLATES.map((t) => `'${t}'`).join(', ');\n    console.warn(`Unsupported project.template: must be one of ${names}`);\n  }\n\n  const isWebContainers = project.template === 'node';\n\n  const form = document.createElement('form');\n  form.method = 'POST';\n  form.setAttribute('style', 'display:none!important;');\n\n  form.appendChild(createHiddenInput('project[title]', project.title));\n  form.appendChild(createHiddenInput('project[description]', project.description));\n  form.appendChild(createHiddenInput('project[template]', project.template));\n\n  if (project.dependencies) {\n    if (isWebContainers) {\n      console.warn(\n        `Invalid project.dependencies: dependencies must be provided as a 'package.json' file when using the 'node' template.`\n      );\n    } else {\n      form.appendChild(\n        createHiddenInput('project[dependencies]', JSON.stringify(project.dependencies))\n      );\n    }\n  }\n\n  if (project.settings) {\n    form.appendChild(createHiddenInput('project[settings]', JSON.stringify(project.settings)));\n  }\n\n  Object.keys(project.files).forEach((path) => {\n    const name = 'project[files]' + bracketedFilePath(path);\n    const value = project.files[path];\n    if (typeof value === 'string') {\n      form.appendChild(createHiddenInput(name, value));\n    }\n  });\n\n  return form;\n}\n\nexport function createProjectFrameHTML(project: Project, options?: EmbedOptions) {\n  const form = createProjectForm(project);\n  form.action = embedUrl('/run', options);\n  form.id = 'sb';\n\n  const html = `<html><head><title></title></head><body>${form.outerHTML}<script>document.getElementById('${form.id}').submit();</script></body></html>`;\n\n  return html;\n}\n\nexport function openNewProject(project: Project, options?: OpenOptions) {\n  const form = createProjectForm(project);\n  form.action = openUrl('/run', options);\n  form.target = openTarget(options);\n\n  document.body.appendChild(form);\n  form.submit();\n  document.body.removeChild(form);\n}\n","import type { Project, OpenOptions, EmbedOptions } from './interfaces';\nimport type { VM } from './vm';\nimport { Connection, getConnection } from './connection';\nimport { openNewProject, createProjectFrameHTML } from './generate';\nimport { embedUrl, findElement, openTarget, openUrl, replaceAndEmbed } from './helpers';\n\n/**\n * Get a VM instance for an existing StackBlitz project iframe.\n */\nexport function connect(frameEl: HTMLIFrameElement): Promise<VM> {\n  if (!frameEl?.contentWindow) {\n    return Promise.reject('Provided element is not an iframe.');\n  }\n  const connection = getConnection(frameEl) ?? new Connection(frameEl);\n  return connection.pending;\n}\n\n/**\n * Open an existing StackBlitz project in a new tab (or in the current window).\n */\nexport function openProject(project: Project, options?: OpenOptions) {\n  openNewProject(project, options);\n}\n\n/**\n * Open an existing StackBlitz project in a new tab (or in the current window).\n */\nexport function openProjectId(projectId: string, options?: OpenOptions) {\n  const url = openUrl(`/edit/${projectId}`, options);\n  const target = openTarget(options);\n  window.open(url, target);\n}\n\n/**\n * Open a project from Github and open it in a new tab (or in the current window).\n *\n * Example usage:\n *\n *     sdk.openGithubProject('some/repository');\n *     sdk.openGithubProject('some/repository/tree/some-branch');\n */\nexport function openGithubProject(repoSlug: string, options?: OpenOptions) {\n  const url = openUrl(`/github/${repoSlug}`, options);\n  const target = openTarget(options);\n  window.open(url, target);\n}\n\n/**\n * Create a new project and embed it on the current page.\n *\n * Returns a promise resolving to a VM instance.\n */\nexport function embedProject(\n  elementOrId: string | HTMLElement,\n  project: Project,\n  options?: EmbedOptions\n): Promise<VM> {\n  const element = findElement(elementOrId);\n  const html = createProjectFrameHTML(project, options);\n  const frame = document.createElement('iframe');\n\n  replaceAndEmbed(element, frame, options);\n\n  // HTML needs to be written after iframe is embedded\n  frame.contentDocument?.write(html);\n\n  return connect(frame);\n}\n\n/**\n * Embeds an existing StackBlitz project on the current page.\n *\n * Returns a promise resolving to a VM instance.\n */\nexport function embedProjectId(\n  elementOrId: string | HTMLElement,\n  projectId: string,\n  options?: EmbedOptions\n): Promise<VM> {\n  const element = findElement(elementOrId);\n  const frame = document.createElement('iframe');\n  frame.src = embedUrl(`/edit/${projectId}`, options);\n\n  replaceAndEmbed(element, frame, options);\n\n  return connect(frame);\n}\n\n/**\n * Embeds a project from Github on the current page.\n *\n * Returns a promise resolving to a VM instance.\n */\nexport function embedGithubProject(\n  elementOrId: string | HTMLElement,\n  repoSlug: string,\n  options?: EmbedOptions\n): Promise<VM> {\n  const element = findElement(elementOrId);\n  const frame = document.createElement('iframe');\n  frame.src = embedUrl(`/github/${repoSlug}`, options);\n\n  replaceAndEmbed(element, frame, options);\n\n  return connect(frame);\n}\n","import {\n  connect,\n  embedGithubProject,\n  embedProject,\n  embedProjectId,\n  openGithubProject,\n  openProject,\n  openProjectId,\n} from './lib';\n\n// Explicitly export public types (vs using `export * from './interfaces'`),\n// so that additions to interfaces don't become a part of our public API by mistake.\nexport type {\n  Project,\n  ProjectOptions,\n  ProjectDependencies,\n  ProjectFiles,\n  ProjectSettings,\n  ProjectTemplate,\n  EmbedOptions,\n  OpenOptions,\n  OpenFileOption,\n  UiThemeOption,\n  UiViewOption,\n} from './interfaces';\nexport type { FsDiff, VM } from './vm';\n\n// Export a single object with methods, for compatibility with UMD and CommonJS.\n// Ideally we would also have named exports, but that can create incompatibilities\n// with some bundlers, and microbundle doesn't support it:\n// https://github.com/developit/microbundle/issues/712\nexport default {\n  connect,\n  embedGithubProject,\n  embedProject,\n  embedProjectId,\n  openGithubProject,\n  openProject,\n  openProjectId,\n};\n"],"names":["PROJECT_TEMPLATES","generators","clickToLoad","value","trueParam","devToolsHeight","percentParam","forceEmbedLayout","hideDevTools","hideExplorer","hideNavigation","showSidebar","booleanParam","name","openFile","stringParams","Array","isArray","filter","val","trim","map","encodeURIComponent","join","terminalHeight","theme","enumParam","view","buildParams","options","params","Object","entries","_ref","key","hasOwnProperty","Boolean","length","Math","round","oneOf","includes","genID","random","toString","slice","openUrl","route","getOrigin","embedUrl","config","assign","origin","replaceAndEmbed","parent","frame","parentNode","Error","id","className","call","height","width","setAttribute","setFrameDimensions","replaceChild","findElement","elementOrId","element","document","getElementById","HTMLElement","openTarget","newWindow","RDC","port","this","pending","onmessage","messageListener","bind","_proto","prototype","request","_this","type","payload","Promise","resolve","reject","postMessage","_extends","__reqid","event","_event$data$payload","data","_event$data","error","__error","__success","result","keys","cleanResult","VM","_rdc","editor","path","setCurrentFile","setTheme","setView","visible","preview","getUrl","then","_data$url","url","setUrl","startsWith","defineProperty","previewOrigin","writable","applyFsDiff","diff","isObject","create","destroy","getDependencies","getFsSnapshot","connections","Connection","vm","listenForSuccess","action","ports","cleanup","pingFrame","_this$element$content","contentWindow","window","clearInterval","interval","removeEventListener","addEventListener","attempts","setInterval","forEach","connection","index","splice","push","createHiddenInput","input","createElement","createProjectForm","project","template","names","t","console","warn","isWebContainers","form","method","appendChild","title","description","dependencies","JSON","stringify","settings","files","replace","bracketedFilePath","connect","frameEl","identifier","Element","getConnection","find","c","_connections$find","embedGithubProject","repoSlug","src","embedProject","_frame$contentDocumen","html","outerHTML","createProjectFrameHTML","contentDocument","write","embedProjectId","projectId","openGithubProject","target","open","openProject","openNewProject","body","submit","removeChild","openProjectId"],"mappings":"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"}